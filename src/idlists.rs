//! This module handles the `idlist` of the instrument definition \
//! The ids of the components can be defined in different ways. \
//! A component can have the `idlist` attribute, which references an `idlist` by name. \
//! Any components that are children of a component with an `idlist` attribute will get the id assigned by `idlist`. \
//! This means that the ids generated by the `idlist` have to match the number of children of the component. \
//! TODO: Enforce the above rule or give a warning if it is not followed.

/// IDList is one way to define the ids of the different components.
#[derive(Debug, Default)]
pub struct IDList {
    /// The name of the IDList. Has to be referenced in some component as `idlist` to be used.
    pub name: String,
    /// A list of ID entries.
    pub entries: Vec<IDEntry>,
}

impl IDList {
    /// Converts the IDList to a list of IDs.
    pub fn get_ids(&self) -> Vec<usize> {
        self.entries
            .iter()
            .flat_map(|entry| entry.start..=entry.end)
            .collect()
    }
}

#[allow(missing_docs)]
#[derive(Debug, Default)]
/// An entry in the IDList. It defines a range of IDs.
pub struct IDEntry {
    pub start: usize,
    pub end: usize,
}
